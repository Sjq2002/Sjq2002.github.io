<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【Java】认识Java的数据类型</title>
      <link href="/2023/07/07/%E3%80%90Java%E3%80%91%E8%AE%A4%E8%AF%86Java%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2023/07/07/%E3%80%90Java%E3%80%91%E8%AE%A4%E8%AF%86Java%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="Java-数据类型"><a href="#Java-数据类型" class="headerlink" title="Java 数据类型"></a>Java 数据类型</h2><h3 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h3><blockquote><p>在Java中，有8中基本数据类型，8中基本数据类型可以分为三类，分别为：数值型，字符型，布尔型。</p></blockquote><table><thead><tr><th align="center">类型</th><th align="center">类型名称</th></tr></thead><tbody><tr><td align="center">数值型</td><td align="center">byte, short, int, long, float, double</td></tr><tr><td align="center">布尔型</td><td align="center">boolean</td></tr><tr><td align="center">字符型</td><td align="center">char</td></tr></tbody></table><p><img src="/images/Java%E6%96%87%E7%AB%A0%E5%9B%BE%E7%89%87/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B01.png" alt="数据类型范围"></p><p>整型： byte（字节型）、short（短整型）、int（整型）、long（长整型）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">byte</span> <span class="variable">numA</span> <span class="operator">=</span> <span class="number">100</span>;</span><br><span class="line"><span class="type">short</span> <span class="variable">numB</span> <span class="operator">=</span> <span class="number">1000</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">numC</span> <span class="operator">=</span> <span class="number">100000</span>; </span><br><span class="line"><span class="type">long</span> <span class="variable">numD</span> <span class="operator">=</span> <span class="number">100000L</span>; </span><br></pre></td></tr></table></figure><blockquote><p>声明长整型时必须在结尾加L或l。</p></blockquote><p>浮点型：float（单精度型&#x2F;浮点型） 、double（双精度型）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">float</span> <span class="variable">fA</span> <span class="operator">=</span> <span class="number">1.1f</span>;</span><br><span class="line"><span class="type">double</span> <span class="variable">fB</span> <span class="operator">=</span> <span class="number">1.2</span>;</span><br></pre></td></tr></table></figure><blockquote><p>声明浮点型时在结尾加F或f。</p></blockquote><p>字符： char（字符型）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">char</span> <span class="variable">cA</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>声明字符型时，要加单引号，并且单引号内只能放一个符号。</p></blockquote><p>布尔型：Boolean</p><blockquote><p>布尔型为 true&#x2F;false，一般用来做逻辑判断</p></blockquote><h3 id="引用数据类型"><a href="#引用数据类型" class="headerlink" title="引用数据类型"></a>引用数据类型</h3><p>数组，类，接口被称为引用数据类型，共同特点：值映射一段地址，于内存中。</p><ul><li>首先为 Object， 它可以由我们自己来创造，Object是一个非常重要的类型，Object类是Javajava.lang包下的核心类，Object类是所有类的父类，何一个类时候如果没有明确的继承一个父类的话，那么它就是Object的子类。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span> &#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">People</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OObject</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>关于Object类型的API， 在此列举出一个，方便大家的参考，详情查看JDK1.8 API文档<br>大家可以在IDEA中尝试，自己做扩展才是学习的必要步骤</p></blockquote></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// toString(); 这是一个很常用的方法，该方法是为了获取对象的信息（返回对象的字符串表示形式）</span></span><br></pre></td></tr></table></figure><hr><ul><li>1、数组(Array)，是多个相同类型数据按一定顺序排列 的集合，并使用一个名字命名，并通过编号的方式 对这些数据进行统一管理。<br>2、数组本身是引用数据类型，而数组中的元素可以是任何数据类型，包括 基本数据类型和引用数据类型。<br>3、创建数组对象会在内存中开辟一整块连续的空间，而数组名中引用的是 这块连续空间的首地址。<br>5、数组的长度一旦确定，就不能修改。<br>6、我们可以直接通过下标(或索引)的方式调用指定位置的元素，速度很快。</li></ul><blockquote><p>创建数组以及数组的基本使用方法</p><ol><li>type[] *;</li><li>type *[];</li><li>String[] *;</li><li>Double *[];</li></ol></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 数组的基本使用</span></span><br><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">3</span>];</span><br><span class="line">以上这段话的意思是： 声明一个名称为arr的数组，类型为<span class="type">int</span>型，并且长度最多为<span class="number">3.</span></span><br><span class="line">在输入时[<span class="number">3</span>]称之为数组的动态初始化.</span><br><span class="line"><span class="comment">// 为数组下标位置赋值</span></span><br><span class="line">在这里讲一句： 下方arr[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>] 中的 <span class="number">0</span>， <span class="number">1</span>， <span class="number">2</span>为数组的索引，从<span class="number">0</span>开始.</span><br><span class="line">比如：<span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>]； 它的索引为：<span class="number">0</span>， <span class="number">1</span>， <span class="number">2</span>， <span class="number">3</span>， <span class="number">4</span>， 长度为<span class="number">5.</span></span><br><span class="line">arr[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">arr[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">arr[<span class="number">2</span>] = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组的静态初始化</span></span><br><span class="line"><span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">或者</span><br><span class="line"><span class="type">int</span>[] arr = &#123;<span class="number">5</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line"></span><br><span class="line">静态初始化: 提前写好数据，&#123;&#125;内部的元素为数组元素</span><br></pre></td></tr></table></figure><blockquote><p>获取数组的长度</p></blockquote><p><code>array.length 为获取数组的长度(数组元素的个数)， 任何一个对象都有自己的length。</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String[] arr = <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;1&quot;</span>,<span class="string">&quot;2&quot;</span>,<span class="string">&quot;3&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">system.out.println(arr.length); <span class="comment">// 3</span></span><br></pre></td></tr></table></figure><blockquote><p>数组的默认初始化值</p></blockquote><table><thead><tr><th>类型</th><th>初始化值</th></tr></thead><tbody><tr><td>基本类型</td><td>0</td></tr><tr><td>引用类型</td><td>null</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Java基础入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Java】变量是什么? 如何定义变量?</title>
      <link href="/2023/07/07/%E3%80%90Java%E3%80%91%E5%8F%98%E9%87%8F%E6%98%AF%E4%BB%80%E4%B9%88-%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F/"/>
      <url>/2023/07/07/%E3%80%90Java%E3%80%91%E5%8F%98%E9%87%8F%E6%98%AF%E4%BB%80%E4%B9%88-%E5%A6%82%E4%BD%95%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="Java-变量"><a href="#Java-变量" class="headerlink" title="Java 变量"></a>Java 变量</h2><blockquote><p>Java是一种强类型语言，在Java中，有不同类型的变量，变量一般都是这样被定义的</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type * = *;</span><br></pre></td></tr></table></figure><p>其中type为类型，type后面紧跟着的为变量名，变量名可自定义。<br>如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">1.22f</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>我们该如何读取我们定义的变量内容?<br><code>万能的打印 System.out.println</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">num</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"><span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">1.22f</span>;</span><br><span class="line"><span class="type">boolean</span> <span class="variable">b1</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用 System.out.println(变量名称)</span></span><br><span class="line">System.out.println(num); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure><blockquote><p>前几节都灰常简单的辣~</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java基础入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>【Java】HelloWorld!</title>
      <link href="/2023/07/07/%E3%80%90Java%E3%80%91HelloWorld/"/>
      <url>/2023/07/07/%E3%80%90Java%E3%80%91HelloWorld/</url>
      
        <content type="html"><![CDATA[<h2 id="Java-Hello-World"><a href="#Java-Hello-World" class="headerlink" title="Java Hello World"></a>Java Hello World</h2><blockquote><p>输出 Hello World</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123; <span class="comment">// 类名必须与文件名相同</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> viod <span class="title function_">main</span><span class="params">(string[] args)</span> &#123; <span class="comment">// main方法为程序入口</span></span><br><span class="line">system.out.println(<span class="string">&quot;Hello World&quot;</span>); <span class="comment">// Java的每个输出与条件语句后面必须带;结束字段</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用javac HelloWorld.java，即可输出Hello World</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World</span><br></pre></td></tr></table></figure><blockquote><p>这可是全语言入门必学，仅学一次，劝你好好把握_(:з」∠)_</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java基础入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Java 基本介绍 学习须知 学习资料</title>
      <link href="/2023/07/07/Java-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D-%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/"/>
      <url>/2023/07/07/Java-%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D-%E5%AD%A6%E4%B9%A0%E9%A1%BB%E7%9F%A5-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Java是一种通用的、高级的、面向对象的编程语言，最初由Sun Microsystems（目前为Oracle公司）于1995年发布。它被设计成一种可以在各种不同的环境中运行的语言，不论是桌面应用程序、企业级应用程序、移动设备或集群服务器，都可以使用Java来开发。</p></blockquote><p>Java的特点包括：</p><ul><li><p><code>简单性</code>：Java的语法相对于其他编程语言比较简单，易于学习和理解。</p></li><li><p><code>面向对象</code>：Java是一种完全的面向对象编程语言，支持类、继承、封装和多态等核心特性。</p></li><li><p><code>平台无关性</code>：Java编写的程序可以在不同的操作系统和硬件平台上运行。这得益于Java虚拟机（JVM），它可以把Java代码翻译成可以在任何计算机上运行的字节码。</p></li><li><p><code>安全性</code>：Java具有严格的安全机制，基于运行时的检查和验证机制来保证程序的安全性，防止恶意程序对系统造成损害。</p></li><li><p><code>可移植性</code>：Java语言的跨平台性保证了程序的可移植性，使得程序无需针对不同平台重新编写，只需编写一次即可在不同平台上运行。</p></li><li><p><code>多线程</code>：Java在语言层面就支持多线程编程，并且提供了丰富的库函数，有效地支持并发编程。</p></li></ul><blockquote><p>Java编写的程序可以划分为两个部分：Java编译器将源代码转换成字节码文件，JVM则将字节码解释、编译并执行。Java有着广泛的应用领域，包括Web开发、移动应用开发、游戏开发、企业级应用开发等。</p></blockquote><hr><h1 id="Java-学习须知"><a href="#Java-学习须知" class="headerlink" title="Java 学习须知"></a>Java 学习须知</h1><blockquote><p><strong>本篇文章可以实现轻松带你入门Java， 在你认真学习的前提下， 一切都不成问题。</strong><br>任何一门语言的学习都是漫长且枯燥的，读者本人要有足够的自制力。<br>学习周期： 7-15天不等（有足够时间）<br>学习目标： Java基础， Java高级<br>学习规划（建议）： 不建议上班过程中学习，推荐下班回家空余时间进行学习， 如果你是学生请随意！</p><p>如果您觉得本教程有某些地方存在一些问题，欢迎评论区指正！<br>如果您觉的本教程晦涩难懂，请立马更换教程，选择适合自己的教程进行观看，避免走弯路</p></blockquote><hr><h1 id="Java-学习文档"><a href="#Java-学习文档" class="headerlink" title="Java 学习文档"></a>Java 学习文档</h1><p>在此，我为大家整理了一小部分的Java学习文档<br>韩信带净化，如果您有更好的学习文档，提前感谢您<del>上贡</del> 贡献到评论区！~</p><blockquote><p>Java API 中文文档（百度网盘）: <a href="https://pan.baidu.com/s/1bgFZ_OurrSKlS2NCG9Ku-g">Java基础材料</a>，  <strong>提取码: 0621</strong></p></blockquote><blockquote><p>API简单使用：点击索引tab，输入关键字，回车，点击显示</p></blockquote><blockquote><p><font size=5 color=ksyblue>失效评论找我，随叫随到</font></p></blockquote><hr><h1 id="README"><a href="#README" class="headerlink" title="README"></a>README</h1><p><code>感谢您阅读此博客内容，希望您能在这里有收获</code></p><hr><h1 id="Java-基础"><a href="#Java-基础" class="headerlink" title="Java 基础"></a>Java 基础</h1><p>至2023年，Java语言仍是主流后端语言，与其他后端语言占比为：12.22%，位列第三，其中第一与第二分别为：Python，C</p><blockquote><p>如果你正处于初学Java，并未配置Java环境变量，下面是推荐的Java配置环境变量的博客，配置Java环境变量为学习Java语言的首发站，希望大家都能用心学习，一起学习，一起坐大牢_(:з」∠)_</p><p>Java配置环境变量:   <a href="https://blog.csdn.net/weixin_53270267/article/details/123198448?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522168352527816800213053901%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=168352527816800213053901&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-123198448-null-null.142%5Ev86%5Einsert_down1,239%5Ev2%5Einsert_chatgpt&utm_term=java%20helloworld&spm=1018.2226.3001.4187">Java配置环境变量</a><br>作者： <font color=red>心猿意马归</font></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java基础入门 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>城镇插件 - Wiki</title>
      <link href="/2023/06/28/notice/"/>
      <url>/2023/06/28/notice/</url>
      
        <content type="html"><![CDATA[<h1 id="文章归档"><a href="#文章归档" class="headerlink" title="文章归档"></a>文章归档</h1><blockquote><p>本文由 _LJaXi 转载并修改部分内容, 不做任何商业用途.</p></blockquote><h1 id="文章状态"><a href="#文章状态" class="headerlink" title="文章状态"></a>文章状态</h1><p><code>停更中...</code></p><blockquote><p>以后考虑加入城镇, 并继续wiki编辑</p></blockquote><h1 id="Towny-插件介绍"><a href="#Towny-插件介绍" class="headerlink" title="Towny 插件介绍"></a>Towny 插件介绍</h1><blockquote><p>Towny城镇是一个可以在 Bukkit&#x2F;Tekkit&#x2F;Spigot&#x2F;Libigot 上运行的先进、多功能的插件.城镇可以设置 pvp, 物品保护, 聊天, 防止通货膨胀和怪物生成. 城镇可以让玩家协作起来,建立一个和谐友好的集体.</p></blockquote><h1 id="Towny-等级制度"><a href="#Towny-等级制度" class="headerlink" title="Towny 等级制度"></a>Towny 等级制度</h1><h2 id="流浪者"><a href="#流浪者" class="headerlink" title="流浪者"></a><font color=lightgrey>流浪者</font></h2><blockquote><p>流浪者不属于任何城镇. 他们没有土地和权限. 流浪者可以购买大使馆区块来获得土地.</p></blockquote><h2 id="居民"><a href="#居民" class="headerlink" title="居民"></a><font color=lightgreen>居民</font></h2><blockquote><p>每个加入服务器的人都可以成为居民</p><p>居民可以使用 <code>/resident</code> 来获得居民信息, 包括拥有的金钱,地皮和朋友及其所属城镇.</p><p>加入城镇的居民可以声明城主已设置出售的区块. 当居民拥有土地后, 可以在居民信息内看到展示拥有区块数和个人地皮权限.</p></blockquote><h2 id="城镇"><a href="#城镇" class="headerlink" title="城镇"></a><font color=green>城镇</font></h2><blockquote><p>城镇是拥有一位城镇统治的居民聚居的地方 (或是只有一位居民).<br>城镇有银行,只有城主才能取钱.城镇可以设置助手来协助管理城镇.<br>城镇每天会定时地收税,交不起税&gt;的城镇将会倒闭.<br>城镇的发展会远离城镇中心,城镇中心区块取决于城主建城的位置.<br>城镇中心需要被声明来作为城镇出生点, 除非城主已在野外声明了一个前哨.</p></blockquote><h2 id="城主"><a href="#城主" class="headerlink" title="城主"></a><font color=red>城主</font></h2><blockquote><p>城主和城镇助手一起管理城镇居民.<br>城主可以决定居民的等级, 城主可以用 <code>/town ranklist</code> 看到等级列表, 可以用 <code>/town rank &#123;add|remove&#125; &#123;玩家名&#125; &#123;头衔&#125;</code><br>一个玩家可以拥有多个头衔,管理员可以为城镇创建不同的角色，头衔.<br>你不可能管理多个城镇除非你是服务器AAAAdmin PLUS. 管理员可以这样来管理两个或更多城镇 :D</p></blockquote><h2 id="被放逐者"><a href="#被放逐者" class="headerlink" title="被放逐者"></a><font color=grey>被放逐者</font></h2><blockquote><p>城主可以设置驱逐出境的名单,需输入 <code>/town outlaw [add/remove] [玩家名]</code>.<br>被放逐者可以是任何玩家. 如果你的城镇的玩家在列表上,那么他就会被自动踢出城镇.<br>如果是开放的城镇,这可以阻止这些玩家自由地出入城镇.<br>进入一个被认为是被放逐者的城镇的玩家将会受到警告<br>被放逐者如果在被放逐的城镇内死亡则会被羁押到城镇监狱内<code>(如果有监狱的话)</code>.<br>如果被击杀也是同上.<br>默认只有城主,助手和警长拥有放逐权限.</p></blockquote><h2 id="国家"><a href="#国家" class="headerlink" title="国家"></a><font color=skyblue>国家</font></h2><blockquote><p>国家由一个作为国都的城镇和其他多个城镇组成 (或只有一个城镇). 掌控国都的城主就是国王.国家可以对其他国家挑起战事. 国家也有独立的银行. 国家银行可从城镇内收税.<br>两个国家可以建立同盟国, 来让居民防止友军伤害, 互相发展建设 (如果土地权限开启了ally权限的话,)也可以各自在战争中互助.</p></blockquote><h2 id="国王"><a href="#国王" class="headerlink" title="国王"></a><font color=orange>国王</font></h2><blockquote><p>国王领导国家,也是国都的城主.<br>国王可以决定居民的职位.<br>他们可以成为国家总理 或其他的自定义职位.<br>国王 可以用 <code>/nation ranklist</code> 查看头衔.<br>玩家可以通过 <code>/nation rank &#123;add|remove&#125; &#123;玩家名&#125; &#123;头衔&#125;</code> 来被授予头衔.<br>玩家可以拥有多个头衔, 管理员可以创建不同的国家角色.<br>国王可以对所统治的城镇内的居民设置头衔 (前缀) 和姓氏 (后缀) . 可以这样设置</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在玩家名后留空来重置头衔和姓氏.</span></span><br><span class="line">/nation set title &#123;玩家名&#125; 头衔</span><br><span class="line"></span><br><span class="line">/nation set surname &#123;玩家名&#125; 姓氏</span><br></pre></td></tr></table></figure><h1 id="头衔"><a href="#头衔" class="headerlink" title="头衔"></a>头衔</h1><blockquote><p>居民可以输入 <code>/town ranklist</code>查看城镇呢ID头衔.<br>城镇可使用 <code>/town rank &#123;add|remove&#125; &#123;玩家名&#125; &#123;头衔&#125;</code> 来给予居民头衔.<br>国王可以使用 <code>/nation rank &#123;add|remove&#125; &#123;玩家名&#125; &#123;头衔&#125;</code> 来给予臣民头衔.</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
